version: "3.8"

volumes:
    rabbitmq_data:
    kongadata:
    pgdata:

networks:
    kong-net:
        driver: bridge

services:
  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: itinerary
    restart: always
    networks:
      - kong-net
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq

  ###################################
  # Notification: The Notification microservice
  ###################################
  notification:
    build:
      context: ./
      dockerfile: ./notification/notification.Dockerfile
    image: elginrspx/notification:Odyssey
    restart: always
    networks:
      - kong-net
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # Payment: The Payment microservice
  ###################################
  payment:
    build:
      context: ./
      dockerfile: ./payment/payment.Dockerfile
    image: elginrspx/payment:Odyssey
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/payment
      PYTHONUNBUFFERED: 1

  ###################################
  # User: The User microservice
  ###################################
  user:
    build:
      context: ./
      dockerfile: ./user/User.Dockerfile
    image: elginrspx/user:Odyssey
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/user
      PYTHONUNBUFFERED: 1
    ports:
      - "5013:5013"

  ###################################
  # Itinerary: The Itinerary microservice PORT 5010
  ###################################
  itinerary:
    build:
      context: ./
      dockerfile: ./itinerary/itinerary.Dockerfile
    image: elginrspx/itinerary:Odyssey
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/itinerary
      PYTHONUNBUFFERED: 1
    ports:
      - "5010:5010"

  ###################################
  # Review: The Review microservice PORT 5011
  ###################################
  review:
    build:
      context: ./
      dockerfile: ./review/review.Dockerfile
    image: elginrspx/review:Odyssey
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/review
      PYTHONUNBUFFERED: 1
    ports:
      - "5011:5011"

  ###################################
  # Cart: The Cart microservice PORT 5015
  ###################################
  cart:
    build:
      context: ./
      dockerfile: ./cart/cart.Dockerfile
    image: elginrspx/cart:Odyssey
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/cart
      PYTHONUNBUFFERED: 1
    ports:
      - "5015:5015"

  ###################################
  # Payment: The Payment microservice PORT 5016
  ###################################
  payment:
    build:
      context: ./
      dockerfile: ./payment/payment.Dockerfile
    image: elginrspx/payment:Odyssey
    restart: always
    networks:
      - kong-net
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/payment
      PYTHONUNBUFFERED: 1
    ports:
      - "5016:5016"

  ###################################
  # Itinerary Approval: The Itinerary Approval complex microservice PORT 5100
  ###################################
  itinerary_approval:
    build:
      context: ./
      dockerfile: ./itinerary_approval/itinerary_approval.Dockerfile
    image: elginrspx/itinerary_approval:Odyssey
    restart: always
    networks:
      - kong-net
    depends_on:
      - rabbitmq
      - notification
      - itinerary
    environment:
      itineraryapprove_URL: http://itinerary:5010/approveitinerary/
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  ###############################################
  # Itinerary Display: The Itinerary Display complex microservice PORT 5200
  ###############################################
  itinerary_display:
    build:
      context: ./
      dockerfile: ./itinerary_display/itinerary_display.Dockerfile
    image: elginrspx/itinerary_display:Odyssey
    restart: always
    networks:
      - kong-net
    depends_on:
      - review
      - itinerary
    environment:
        itinerary_URL: http://itinerary:5010/itinerary/
        itinerary_detail_URL: http://itinerary:5010/itinerary/itinerarydetails/
        review_URL: http://review:5011/review/ 
        PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"

  ###################################
  # Purchase Itinerary: The Purchase Itinerary complex microservice PORT 5300
  ###################################
  purchase_itinerary:
    build:
      context: ./
      dockerfile: ./purchase_itinerary/purchase_itinerary.Dockerfile
    image: elginrspx/purchase_itinerary:Odyssey
    restart: always
    networks:
      - kong-net
    depends_on:
      - rabbitmq
      - notification
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      cart_URL: http://cart:5015/cart
      payment_URL: http://payment:5016/payment
      paymentIntent_URL: http://payment:5016/createPaymentIntent
      PYTHONUNBUFFERED: 1
    ports:
      - "5300:5300"

  ###############################################
  # Display Purchased Itinerary: The Display Purchased itinerary complex microservice PORT 5400
  ###############################################
  display_purchased_itinerary:
    build:
      context: ./
      dockerfile: ./display_purchased_itinerary/display_purchased_itinerary.Dockerfile
    image: elginrspx/display_purchased_itinerary:Odyssey
    restart: always
    networks:
      - kong-net
    depends_on:
      - payment
      - itinerary
    environment:
        payment_URL: http://payment:5016/payment/user/
        itinerary_URL: http://itinerary:5010/itinerary/ 
        PYTHONUNBUFFERED: 1
    ports:
      - "5400:5400"

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
  
  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata